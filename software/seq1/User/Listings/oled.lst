C51 COMPILER V9.54   OLED                                                                  12/31/2024 12:14:10 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: E:\004-Programming\02-Embedded\Keil5\C51\BIN\C51.EXE ..\Dev\oled.c OPTIMIZE(8,SPEED) BROWSE INCDIR(
                    -..\Dev;..\Sys;..\User) DEBUG OBJECTEXTEND PRINT(.\Listings\oled.lst) OBJECT(.\Objects\oled.obj)

line level    source

   1          #include "oled.h"
   2          #include "oledfont.h" 
   3                   
   4          //OLED的显存
   5          //存放格式如下.
   6          //[0]0 1 2 3 ... 127    
   7          //[1]0 1 2 3 ... 127    
   8          //[2]0 1 2 3 ... 127    
   9          //[3]0 1 2 3 ... 127    
  10          //[4]0 1 2 3 ... 127    
  11          //[5]0 1 2 3 ... 127    
  12          //[6]0 1 2 3 ... 127    
  13          //[7]0 1 2 3 ... 127                       
  14          
  15          void Delay1ms(void)     //@12.000MHz
  16          {
  17   1              unsigned char data i, j;
  18   1      
  19   1              i = 2;
  20   1              j = 239;
  21   1              do
  22   1              {
  23   2                      while (--j);
  24   2              } while (--i);
  25   1      }
  26          
  27          
  28          void delay_ms(unsigned int ms)
  29          {                         
  30   1              while(ms--)
  31   1          {
  32   2              Delay1ms();
  33   2          }
  34   1      }
  35          
  36          //反显函数
  37          void OLED_ColorTurn(u8 i)
  38          {
  39   1              if(i==0)
  40   1                      {
  41   2                              OLED_WR_Byte(0xA6,OLED_CMD);//正常显示
  42   2                      }
  43   1              if(i==1)
  44   1                      {
  45   2                              OLED_WR_Byte(0xA7,OLED_CMD);//反色显示
  46   2                      }
  47   1      }
  48          
  49          //屏幕旋转180度
  50          void OLED_DisplayTurn(u8 i)
  51          {
  52   1              if(i==0)
  53   1                      {
  54   2                              OLED_WR_Byte(0xC8,OLED_CMD);//正常显示
C51 COMPILER V9.54   OLED                                                                  12/31/2024 12:14:10 PAGE 2   

  55   2                              OLED_WR_Byte(0xA1,OLED_CMD);
  56   2                      }
  57   1              if(i==1)
  58   1                      {
  59   2                              OLED_WR_Byte(0xC0,OLED_CMD);//反转显示
  60   2                              OLED_WR_Byte(0xA0,OLED_CMD);
  61   2                      }
  62   1      }
  63          
  64          
  65          //延时
  66          void IIC_delay(void)
  67          {
  68   1              u8 t=1;
  69   1              while(t--);
  70   1      }
  71          
  72          //起始信号
  73          void I2C_Start(void)
  74          {
  75   1              OLED_SDA_Set();
  76   1              OLED_SCL_Set();
  77   1              IIC_delay();
  78   1              OLED_SDA_Clr();
  79   1              IIC_delay();
  80   1              OLED_SCL_Clr();
  81   1               
  82   1      }
  83          
  84          //结束信号
  85          void I2C_Stop(void)
  86          {
  87   1              OLED_SDA_Clr();
  88   1              OLED_SCL_Set();
  89   1              IIC_delay();
  90   1              OLED_SDA_Set();
  91   1      }
  92          
  93          //等待信号响应
  94          void I2C_WaitAck(void) //测数据信号的电平
  95          {
  96   1              OLED_SDA_Set();
  97   1              IIC_delay();
  98   1              OLED_SCL_Set();
  99   1              IIC_delay();
 100   1              OLED_SCL_Clr();
 101   1              IIC_delay();
 102   1      }
 103          
 104          //写入一个字节
 105          void Send_Byte(u8 dat)
 106          {
 107   1              u8 i;
 108   1              for(i=0;i<8;i++)
 109   1              {
 110   2                      OLED_SCL_Clr();//将时钟信号设置为低电平
 111   2                      if(dat&0x80)//将dat的8位从最高位依次写入
 112   2                      {
 113   3                              OLED_SDA_Set();
 114   3          }
 115   2                      else
 116   2                      {
C51 COMPILER V9.54   OLED                                                                  12/31/2024 12:14:10 PAGE 3   

 117   3                              OLED_SDA_Clr();
 118   3          }
 119   2                      IIC_delay();
 120   2                      OLED_SCL_Set();
 121   2                      IIC_delay();
 122   2                      OLED_SCL_Clr();
 123   2                      dat<<=1;
 124   2        }
 125   1      }
 126          
 127          //发送一个字节
 128          //向SSD1306写入一个字节。
 129          //mode:数据/命令标志 0,表示命令;1,表示数据;
 130          void OLED_WR_Byte(u8 dat,u8 mode)
 131          {
 132   1              I2C_Start();
 133   1              Send_Byte(0x78);
 134   1              I2C_WaitAck();
 135   1              if(mode){Send_Byte(0x40);}
 136   1        else{Send_Byte(0x00);}
 137   1              I2C_WaitAck();
 138   1              Send_Byte(dat);
 139   1              I2C_WaitAck();
 140   1              I2C_Stop();
 141   1      }
 142          
 143          //坐标设置
 144          
 145          void OLED_Set_Pos(u8 x, u8 y) 
 146          { 
 147   1              OLED_WR_Byte(0xb0+y,OLED_CMD);
 148   1              OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 149   1              OLED_WR_Byte((x&0x0f),OLED_CMD);
 150   1      }         
 151          //开启OLED显示    
 152          void OLED_Display_On(void)
 153          {
 154   1              OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 155   1              OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 156   1              OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 157   1      }
 158          //关闭OLED显示     
 159          void OLED_Display_Off(void)
 160          {
 161   1              OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 162   1              OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 163   1              OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 164   1      }                                        
 165          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!        
 166          void OLED_Clear(void)  
 167          {  
 168   1              u8 i,n;             
 169   1              for(i=0;i<8;i++)  
 170   1              {  
 171   2                      OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 172   2                      OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 173   2                      OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 174   2                      for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 175   2              } //更新显示
 176   1      }
 177          
 178          //在指定位置显示一个字符,包括部分字符
C51 COMPILER V9.54   OLED                                                                  12/31/2024 12:14:10 PAGE 4   

 179          //x:0~127
 180          //y:0~63                                 
 181          //sizey:选择字体 6x8  8x16
 182          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 sizey)
 183          {       
 184   1              u8 c=0,sizex=sizey/2;
 185   1              u16 i=0,size1;
 186   1              if(sizey==8)size1=6;
 187   1              else size1=(sizey/8+((sizey%8)?1:0))*(sizey/2);
 188   1              c=chr-' ';//得到偏移后的值
 189   1              OLED_Set_Pos(x,y);
 190   1              for(i=0;i<size1;i++)
 191   1              {
 192   2                      if(i%sizex==0&&sizey!=8) OLED_Set_Pos(x,y++);
 193   2                      if(sizey==8) OLED_WR_Byte(asc2_0806[c][i],OLED_DATA);//6X8字号
 194   2                      else if(sizey==16) OLED_WR_Byte(asc2_1608[c][i],OLED_DATA);//8x16字号
 195   2      //              else if(sizey==xx) OLED_WR_Byte(asc2_xxxx[c][i],OLED_DATA);//用户添加字号
 196   2                      else return;
 197   2              }
 198   1      }
 199          //m^n函数
 200          u32 oled_pow(u8 m,u8 n)
 201          {
 202   1              u32 result=1;    
 203   1              while(n--)result*=m;    
 204   1              return result;
 205   1      }                                 
 206          //显示数字
 207          //x,y :起点坐标
 208          //num:要显示的数字
 209          //len :数字的位数
 210          //sizey:字体大小                  
 211          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 sizey)
 212          {               
 213   1              u8 t,temp,m=0;
 214   1              u8 enshow=0;
 215   1              if(sizey==8)m=2;
 216   1              for(t=0;t<len;t++)
 217   1              {
 218   2                      temp=(num/oled_pow(10,len-t-1))%10;
 219   2                      if(enshow==0&&t<(len-1))
 220   2                      {
 221   3                              if(temp==0)
 222   3                              {
 223   4                                      OLED_ShowChar(x+(sizey/2+m)*t,y,' ',sizey);
 224   4                                      continue;
 225   4                              }else enshow=1;
 226   3                      }
 227   2                      OLED_ShowChar(x+(sizey/2+m)*t,y,temp+'0',sizey);
 228   2              }
 229   1      }
 230          //显示一个字符号串
 231          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 sizey)
 232          {
 233   1              u8 j=0;
 234   1              while (chr[j]!='\0')
 235   1              {               
 236   2                      OLED_ShowChar(x,y,chr[j++],sizey);
 237   2                      if(sizey==8)x+=6;
 238   2                      else x+=sizey/2;
 239   2              }
 240   1      }
C51 COMPILER V9.54   OLED                                                                  12/31/2024 12:14:10 PAGE 5   

 241          //显示汉字
 242          void OLED_ShowChinese(u8 x,u8 y,u8 no,u8 sizey)
 243          {
 244   1              u16 i,size1=(sizey/8+((sizey%8)?1:0))*sizey;
 245   1              for(i=0;i<size1;i++)
 246   1              {
 247   2                      if(i%sizey==0) OLED_Set_Pos(x,y++);
 248   2                      if(sizey==16) OLED_WR_Byte(Hzk[no][i],OLED_DATA);//16x16字号
 249   2      //              else if(sizey==xx) OLED_WR_Byte(xxx[c][i],OLED_DATA);//用户添加字号
 250   2                      else return;
 251   2              }                               
 252   1      }
 253          
 254          
 255          //显示图片
 256          //x,y显示坐标
 257          //sizex,sizey,图片长宽
 258          //BMP：要显示的图片
 259          void OLED_DrawBMP(u8 x,u8 y,u8 sizex, u8 sizey,u8 BMP[])
 260          {       
 261   1        u16 j=0;
 262   1              u8 i,m;
 263   1              sizey=sizey/8+((sizey%8)?1:0);
 264   1              for(i=0;i<sizey;i++)
 265   1              {
 266   2                      OLED_Set_Pos(x,i+y);
 267   2          for(m=0;m<sizex;m++)
 268   2                      {      
 269   3                              OLED_WR_Byte(BMP[j++],OLED_DATA);               
 270   3                      }
 271   2              }
 272   1      } 
 273          
 274          
 275          
 276          //初始化                                    
 277          void OLED_Init(void)
 278          {
 279   1              OLED_RES_Clr();
 280   1        delay_ms(200);
 281   1              OLED_RES_Set();
 282   1              
 283   1              OLED_WR_Byte(0xAE,OLED_CMD);//--turn off oled panel
 284   1              OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 285   1              OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 286   1              OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 287   1              OLED_WR_Byte(0x81,OLED_CMD);//--set contrast control register
 288   1              OLED_WR_Byte(0xCF,OLED_CMD); // Set SEG Output Current Brightness
 289   1              OLED_WR_Byte(0xA1,OLED_CMD);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
 290   1              OLED_WR_Byte(0xC8,OLED_CMD);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
 291   1              OLED_WR_Byte(0xA6,OLED_CMD);//--set normal display
 292   1              OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 293   1              OLED_WR_Byte(0x3f,OLED_CMD);//--1/64 duty
 294   1              OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset       Shift Mapping RAM Counter (0x00~0x3F)
 295   1              OLED_WR_Byte(0x00,OLED_CMD);//-not offset
 296   1              OLED_WR_Byte(0xd5,OLED_CMD);//--set display clock divide ratio/oscillator frequency
 297   1              OLED_WR_Byte(0x80,OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec
 298   1              OLED_WR_Byte(0xD9,OLED_CMD);//--set pre-charge period
 299   1              OLED_WR_Byte(0xF1,OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 300   1              OLED_WR_Byte(0xDA,OLED_CMD);//--set com pins hardware configuration
 301   1              OLED_WR_Byte(0x12,OLED_CMD);
 302   1              OLED_WR_Byte(0xDB,OLED_CMD);//--set vcomh
C51 COMPILER V9.54   OLED                                                                  12/31/2024 12:14:10 PAGE 6   

 303   1              OLED_WR_Byte(0x40,OLED_CMD);//Set VCOM Deselect Level
 304   1              OLED_WR_Byte(0x20,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
 305   1              OLED_WR_Byte(0x02,OLED_CMD);//
 306   1              OLED_WR_Byte(0x8D,OLED_CMD);//--set Charge Pump enable/disable
 307   1              OLED_WR_Byte(0x14,OLED_CMD);//--set(0x10) disable
 308   1              OLED_WR_Byte(0xA4,OLED_CMD);// Disable Entire Display On (0xa4/0xa5)
 309   1              OLED_WR_Byte(0xA6,OLED_CMD);// Disable Inverse Display On (0xa6/a7) 
 310   1              OLED_Clear();
 311   1              OLED_WR_Byte(0xAF,OLED_CMD); /*display ON*/ 
 312   1      }
 313          
 314          
 315          
 316          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1212    ----
   CONSTANT SIZE    =   2296    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      50
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
