C51 COMPILER V9.54   MAIN                                                                  12/31/2024 21:11:35 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\004-Programming\02-Embedded\Keil5\C51\BIN\C51.EXE main.c COMPACT OPTIMIZE(8,SPEED) BROWSE MODP2 
                    -INCDIR(..\Dev;..\Sys;..\User;..\Dev\menu;..\Dev\mg200) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\ma
                    -in.obj)

line level    source

   1          #include <STC89C5xRC.H>
   2          #include "config.h"
   3          #include "bmp.h" 
   4          
   5          /*****************************************任务函数声明***********************************************/
   6          
   7          //任务调度机制
   8          void Task_Init(void);
   9          void TaskRun(void);
  10          
  11          //具体任务函数
  12          void Led_Task(void);
  13          void key_Task(void);
  14          void Oled_Task(void);
  15          
  16          /*****************************************外设全局变量***********************************************/
  17          
  18          //led专用变量
  19          uint8_t ucled;
  20          
  21          //按键专用变量
  22          uint8_t Key_Value;
  23          uint8_t Key_Down;
  24          uint8_t Key_Old;
  25          
  26          //任务调度专用变量
  27          uint16_t pdata TaskTimer[TASKNUM_MAX];
  28          TaskStruct pdata Task[] = {
  29              {Led_Task, 100},
  30                  {key_Task, 10},
  31                  {Oled_Task, 1000}
  32          };
  33          /*****************************************用户全局变量***********************************************/
  34          //char str[10];
  35          //uint8_t eepromBuf[10];
  36          //int count = 0;
  37          
  38          uint8_t menuKey_flag;
  39          
  40          /****************************************************************************************************/
  41          
  42          
  43          /*------------------------------------------主函数--------------------------------------------------*/
  44          int main(void)
  45          {
  46   1              Task_Init();
  47   1          
  48   1          //delay_ms(1000);
  49   1          
  50   1              OLED_Init();//初始化OLED
  51   1              OLED_ColorTurn(0);//0正常显示，1 反色显示
  52   1          OLED_DisplayTurn(0);//0正常显示 1 屏幕翻转显示
  53   1          
C51 COMPILER V9.54   MAIN                                                                  12/31/2024 21:11:35 PAGE 2   

  54   1          menu_init();
  55   1          
  56   1          //EEPROM_Write("hello", 0, 5);
  57   1          
  58   1              Timer0_Init();
  59   1          Uart1_Init();
  60   1              EA = 1;
  61   1          
  62   1          //sprintf(str, "hello\n");
  63   1          UART_SendString("hello");
  64   1              
  65   1              while(1)
  66   1              {
  67   2                      TaskRun();
  68   2              }
  69   1      }
  70          
  71          /*-----------------------------------------中断服务函数--------------------------------------------------*
             -/
  72          void Timer0_Rountine(void)      interrupt 1
  73          {
  74   1              uint8_t i;
  75   1          
  76   1          // 手动重装
  77   1          TL0 = 0x66;                         //设置定时初始值
  78   1              TH0 = 0xFC;                             //设置定时初始值
  79   1          
  80   1              //任务定时器递减
  81   1              for(i = 0; i < TASKNUM_MAX; i++)
  82   1                      if(TaskTimer[i])
  83   1                              TaskTimer[i]--;
  84   1      }
  85          
  86          void Uart1_Isr(void) interrupt 4
  87          {
  88   1              if (RI)                         //检测串口1接收中断
  89   1              {
  90   2              
  91   2                      RI = 0;                 //清除串口1接收中断请求位
  92   2              }
  93   1          
  94   1      //    if (TI)                           //检测串口1发送中断
  95   1      //    {
  96   1      //        
  97   1      //        TI = 0;
  98   1      //    }
  99   1      }
 100          
 101          /*-----------------------------------------具体任务--------------------------------------------------*/
 102          void Led_Task(void)
 103          {
 104   1          //P0 ^= 0x01;
 105   1      }       
 106          
 107          void key_Task(void)
 108          {
 109   1              //三行代码
 110   1              Key_Value = Key_Read();
 111   1              Key_Down = Key_Value&(Key_Value^Key_Old);
 112   1              Key_Old = Key_Value;
 113   1              
 114   1              switch(Key_Down)
C51 COMPILER V9.54   MAIN                                                                  12/31/2024 21:11:35 PAGE 3   

 115   1              {
 116   2                      case 13:
 117   2                  //P04 = ~P04;
 118   2                  menuKey_flag = 13;
 119   2              break;
 120   2              
 121   2              case 14:
 122   2                  //P05 = ~P05;
 123   2                  menuKey_flag = 14;
 124   2              break;
 125   2              
 126   2              case 15:
 127   2                  //P06 = ~P06;
 128   2                  menuKey_flag = 15; 
 129   2              break;
 130   2              
 131   2              case 16:
 132   2                  //P07 = ~P07;                       
 133   2                  menuKey_flag = 16;
 134   2                      break;
 135   2              
 136   2              default:
 137   2              break;
 138   2              }
 139   1      
 140   1          //menu(Key_Down);
 141   1      }
 142          
 143          void Oled_Task(void)
 144          {
 145   1      //    // oled测试
 146   1      //    sprintf(str, "count = %d", count++);
 147   1      //    OLED_ShowString(0,0,str,16);
 148   1      //    
 149   1      //    // eeprom测试
 150   1      //    EEPROM_Read(eepromBuf, 0, 5);
 151   1      //    OLED_ShowString(0,2,(char *)eepromBuf,16);
 152   1             
 153   1              menu(menuKey_flag);
 154   1              menuKey_flag = 0;
 155   1          
 156   1      }
 157          
 158          /*-----------------------------------------任务调度--------------------------------------------------*/
 159          void Task_Init(void)
 160          {
 161   1              uint8_t NTask;
 162   1              for(NTask = 0; NTask < sizeof(Task)/sizeof(Task[0]); NTask++)
 163   1              {
 164   2                      TaskTimer[NTask] = Task[NTask].TaskPeriod;
 165   2              }
 166   1      }
 167          
 168          void TaskRun(void)
 169          {
 170   1              uint8_t NTask;
 171   1              for(NTask = 0; NTask < sizeof(Task)/sizeof(Task[0]); NTask++)
 172   1              {
 173   2                      if(TaskTimer[NTask] == 0)
 174   2                      {
 175   3                              TaskTimer[NTask] = Task[NTask].TaskPeriod;
 176   3                              (Task[NTask].pTask)();
C51 COMPILER V9.54   MAIN                                                                  12/31/2024 21:11:35 PAGE 4   

 177   3                      }
 178   2              }
 179   1      }
 180          
 181          
 182          
 183          
 184          
 185          
 186          
 187          
 188          
 189          
 190          
 191          
 192          
 193          
 194          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    295    ----
   CONSTANT SIZE    =   1030    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     28       1
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
